Component: ARM Compiler 5.06 update 7 (build 960) Tool: armlink [4d3601]

==============================================================================

Section Cross References

    main.o(i.main) refers to stream_buffer.o(i.xStreamBufferGenericCreate) for xStreamBufferGenericCreate
    main.o(i.main) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    main.o(i.main) refers to tasks.o(i.vTaskStartScheduler) for vTaskStartScheduler
    main.o(i.main) refers to main.o(.data) for msg
    main.o(i.main) refers to main.o(i.task1) for task1
    main.o(i.main) refers to main.o(i.task2) for task2
    main.o(i.task1) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    main.o(i.task1) refers to stream_buffer.o(i.xStreamBufferSend) for xStreamBufferSend
    main.o(i.task1) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    main.o(i.task1) refers to main.o(.constdata) for .constdata
    main.o(i.task1) refers to main.o(.data) for msg
    main.o(i.task2) refers to stream_buffer.o(i.xStreamBufferReceive) for xStreamBufferReceive
    main.o(i.task2) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    main.o(i.task2) refers to main.o(.data) for msg
    croutine.o(i.prvCheckDelayedList) refers to tasks.o(i.xTaskGetTickCount) for xTaskGetTickCount
    croutine.o(i.prvCheckDelayedList) refers to list.o(i.uxListRemove) for uxListRemove
    croutine.o(i.prvCheckDelayedList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    croutine.o(i.prvCheckDelayedList) refers to croutine.o(.data) for xLastTickCount
    croutine.o(i.prvCheckDelayedList) refers to croutine.o(.bss) for pxReadyCoRoutineLists
    croutine.o(i.prvCheckPendingReadyList) refers to list.o(i.uxListRemove) for uxListRemove
    croutine.o(i.prvCheckPendingReadyList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    croutine.o(i.prvCheckPendingReadyList) refers to croutine.o(.bss) for xPendingReadyCoRoutineList
    croutine.o(i.prvCheckPendingReadyList) refers to croutine.o(.data) for uxTopCoRoutineReadyPriority
    croutine.o(i.prvInitialiseCoRoutineLists) refers to list.o(i.vListInitialise) for vListInitialise
    croutine.o(i.prvInitialiseCoRoutineLists) refers to croutine.o(.bss) for pxReadyCoRoutineLists
    croutine.o(i.prvInitialiseCoRoutineLists) refers to croutine.o(.data) for pxDelayedCoRoutineList
    croutine.o(i.vCoRoutineAddToDelayedList) refers to list.o(i.uxListRemove) for uxListRemove
    croutine.o(i.vCoRoutineAddToDelayedList) refers to list.o(i.vListInsert) for vListInsert
    croutine.o(i.vCoRoutineAddToDelayedList) refers to croutine.o(.data) for xCoRoutineTickCount
    croutine.o(i.vCoRoutineSchedule) refers to croutine.o(i.prvCheckPendingReadyList) for prvCheckPendingReadyList
    croutine.o(i.vCoRoutineSchedule) refers to croutine.o(i.prvCheckDelayedList) for prvCheckDelayedList
    croutine.o(i.vCoRoutineSchedule) refers to croutine.o(.data) for pxDelayedCoRoutineList
    croutine.o(i.vCoRoutineSchedule) refers to croutine.o(.bss) for pxReadyCoRoutineLists
    croutine.o(i.xCoRoutineCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    croutine.o(i.xCoRoutineCreate) refers to croutine.o(i.prvInitialiseCoRoutineLists) for prvInitialiseCoRoutineLists
    croutine.o(i.xCoRoutineCreate) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    croutine.o(i.xCoRoutineCreate) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    croutine.o(i.xCoRoutineCreate) refers to croutine.o(.data) for pxCurrentCoRoutine
    croutine.o(i.xCoRoutineCreate) refers to croutine.o(.bss) for pxReadyCoRoutineLists
    croutine.o(i.xCoRoutineRemoveFromEventList) refers to list.o(i.uxListRemove) for uxListRemove
    croutine.o(i.xCoRoutineRemoveFromEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    croutine.o(i.xCoRoutineRemoveFromEventList) refers to croutine.o(.bss) for xPendingReadyCoRoutineList
    croutine.o(i.xCoRoutineRemoveFromEventList) refers to croutine.o(.data) for pxCurrentCoRoutine
    event_groups.o(i.vEventGroupClearBitsCallback) refers to event_groups.o(i.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(i.vEventGroupDelete) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(i.vEventGroupDelete) refers to tasks.o(i.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(i.vEventGroupDelete) refers to heap_4.o(i.vPortFree) for vPortFree
    event_groups.o(i.vEventGroupDelete) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(i.vEventGroupSetBitsCallback) refers to event_groups.o(i.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(i.xEventGroupClearBits) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(i.xEventGroupClearBits) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    event_groups.o(i.xEventGroupCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    event_groups.o(i.xEventGroupCreate) refers to list.o(i.vListInitialise) for vListInitialise
    event_groups.o(i.xEventGroupSetBits) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(i.xEventGroupSetBits) refers to tasks.o(i.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(i.xEventGroupSetBits) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(i.xEventGroupSync) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(i.xEventGroupSync) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(i.xEventGroupSync) refers to event_groups.o(i.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(i.xEventGroupSync) refers to tasks.o(i.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(i.xEventGroupSync) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(i.xEventGroupSync) refers to tasks.o(i.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(i.xEventGroupSync) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(i.xEventGroupSync) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    event_groups.o(i.xEventGroupWaitBits) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(i.xEventGroupWaitBits) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(i.xEventGroupWaitBits) refers to event_groups.o(i.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(i.xEventGroupWaitBits) refers to tasks.o(i.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(i.xEventGroupWaitBits) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(i.xEventGroupWaitBits) refers to tasks.o(i.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(i.xEventGroupWaitBits) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(i.xEventGroupWaitBits) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.pcQueueGetName) refers to queue.o(.bss) for xQueueRegistry
    queue.o(i.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(i.prvCopyDataToQueue) refers to tasks.o(i.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(i.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(i.prvInitialiseMutex) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.prvInitialiseNewQueue) refers to queue.o(i.xQueueGenericReset) for xQueueGenericReset
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvNotifyQueueSetContainer) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.prvNotifyQueueSetContainer) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvUnlockQueue) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.vTaskMissedYield) for vTaskMissedYield
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueAddToRegistry) refers to queue.o(.bss) for xQueueRegistry
    queue.o(i.vQueueDelete) refers to queue.o(i.vQueueUnregisterQueue) for vQueueUnregisterQueue
    queue.o(i.vQueueDelete) refers to heap_4.o(i.vPortFree) for vPortFree
    queue.o(i.vQueueUnregisterQueue) refers to queue.o(.bss) for xQueueRegistry
    queue.o(i.vQueueWaitForMessageRestricted) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.vQueueWaitForMessageRestricted) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueWaitForMessageRestricted) refers to tasks.o(i.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(i.vQueueWaitForMessageRestricted) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueAddToSet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueAddToSet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueCRReceive) refers to croutine.o(i.vCoRoutineAddToDelayedList) for vCoRoutineAddToDelayedList
    queue.o(i.xQueueCRReceive) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(i.xQueueCRReceive) refers to croutine.o(i.xCoRoutineRemoveFromEventList) for xCoRoutineRemoveFromEventList
    queue.o(i.xQueueCRReceiveFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(i.xQueueCRReceiveFromISR) refers to croutine.o(i.xCoRoutineRemoveFromEventList) for xCoRoutineRemoveFromEventList
    queue.o(i.xQueueCRSend) refers to queue.o(i.prvIsQueueFull) for prvIsQueueFull
    queue.o(i.xQueueCRSend) refers to croutine.o(i.vCoRoutineAddToDelayedList) for vCoRoutineAddToDelayedList
    queue.o(i.xQueueCRSend) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueCRSend) refers to croutine.o(i.xCoRoutineRemoveFromEventList) for xCoRoutineRemoveFromEventList
    queue.o(i.xQueueCRSendFromISR) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueCRSendFromISR) refers to croutine.o(i.xCoRoutineRemoveFromEventList) for xCoRoutineRemoveFromEventList
    queue.o(i.xQueueCreateCountingSemaphore) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(i.xQueueCreateSet) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueGenericCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    queue.o(i.xQueueGenericCreate) refers to queue.o(i.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReset) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReset) refers to list.o(i.vListInitialise) for vListInitialise
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvIsQueueFull) for prvIsQueueFull
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericSendFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGenericSendFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGiveFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueueGiveFromISR) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGiveMutexRecursive) refers to tasks.o(i.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(i.xQueueGiveMutexRecursive) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueuePeek) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueuePeek) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueuePeek) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueuePeek) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueuePeek) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueuePeekFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueuePeekFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueReceive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueReceive) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueReceive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueReceive) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueReceive) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueReceiveFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueueReceiveFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueRemoveFromSet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueRemoveFromSet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueSelectFromSet) refers to queue.o(i.xQueueReceive) for xQueueReceive
    queue.o(i.xQueueSelectFromSetFromISR) refers to queue.o(i.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(i.xQueueTakeMutexRecursive) refers to tasks.o(i.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(i.xQueueTakeMutexRecursive) refers to queue.o(i.xQueueSemaphoreTake) for xQueueSemaphoreTake
    stream_buffer.o(i.prvInitialiseNewStreamBuffer) refers to memset.o(.text) for memset
    stream_buffer.o(i.prvInitialiseNewStreamBuffer) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    stream_buffer.o(i.prvReadBytesFromBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(i.prvReadMessageFromBuffer) refers to stream_buffer.o(i.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(i.prvWriteBytesToBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(i.prvWriteMessageToBuffer) refers to stream_buffer.o(i.prvWriteBytesToBuffer) for prvWriteBytesToBuffer
    stream_buffer.o(i.vStreamBufferDelete) refers to heap_4.o(i.vPortFree) for vPortFree
    stream_buffer.o(i.vStreamBufferDelete) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    stream_buffer.o(i.xStreamBufferBytesAvailable) refers to stream_buffer.o(i.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(i.xStreamBufferGenericCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    stream_buffer.o(i.xStreamBufferGenericCreate) refers to stream_buffer.o(i.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(i.xStreamBufferIsFull) refers to stream_buffer.o(i.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(i.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(i.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(i.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(i.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(i.xStreamBufferReceive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(i.xStreamBufferReceive) refers to stream_buffer.o(i.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(i.xStreamBufferReceive) refers to tasks.o(i.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(i.xStreamBufferReceive) refers to tasks.o(i.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(i.xStreamBufferReceive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(i.xStreamBufferReceive) refers to tasks.o(i.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(i.xStreamBufferReceive) refers to stream_buffer.o(i.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(i.xStreamBufferReceive) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(i.xStreamBufferReceive) refers to tasks.o(i.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(i.xStreamBufferReceive) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(i.xStreamBufferReceiveCompletedFromISR) refers to tasks.o(i.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(i.xStreamBufferReceiveFromISR) refers to stream_buffer.o(i.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(i.xStreamBufferReceiveFromISR) refers to stream_buffer.o(i.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(i.xStreamBufferReceiveFromISR) refers to tasks.o(i.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(i.xStreamBufferReset) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(i.xStreamBufferReset) refers to stream_buffer.o(i.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(i.xStreamBufferReset) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(i.xStreamBufferSend) refers to tasks.o(i.vTaskSetTimeOutState) for vTaskSetTimeOutState
    stream_buffer.o(i.xStreamBufferSend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(i.xStreamBufferSend) refers to stream_buffer.o(i.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(i.xStreamBufferSend) refers to tasks.o(i.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(i.xStreamBufferSend) refers to tasks.o(i.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(i.xStreamBufferSend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(i.xStreamBufferSend) refers to tasks.o(i.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(i.xStreamBufferSend) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    stream_buffer.o(i.xStreamBufferSend) refers to stream_buffer.o(i.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(i.xStreamBufferSend) refers to stream_buffer.o(i.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(i.xStreamBufferSend) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(i.xStreamBufferSend) refers to tasks.o(i.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(i.xStreamBufferSend) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(i.xStreamBufferSendCompletedFromISR) refers to tasks.o(i.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(i.xStreamBufferSendFromISR) refers to stream_buffer.o(i.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(i.xStreamBufferSendFromISR) refers to stream_buffer.o(i.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(i.xStreamBufferSendFromISR) refers to stream_buffer.o(i.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(i.xStreamBufferSendFromISR) refers to tasks.o(i.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    tasks.o(i.eTaskGetState) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.eTaskGetState) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.eTaskGetState) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.eTaskGetState) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.pcTaskGetName) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.data) for xTickCount
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(i.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(i.prvAddNewTaskToReadyList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvDeleteTCB) refers to heap_4.o(i.vPortFree) for vPortFree
    tasks.o(i.prvIdleTask) refers to tasks.o(i.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(i.prvIdleTask) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseNewTask) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    tasks.o(i.prvInitialiseNewTask) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    tasks.o(i.prvInitialiseNewTask) refers to port.o(i.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(i.prvInitialiseTaskLists) refers to list.o(i.vListInitialise) for vListInitialise
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvResetNextTaskUnblockTime) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvTaskIsTaskSuspended) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.pvTaskGetThreadLocalStoragePointer) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.pvTaskIncrementMutexHeldCount) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.ulTaskGenericNotifyTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskGenericNotifyTake) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.ulTaskGenericNotifyTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskGenericNotifyTake) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.ulTaskGenericNotifyValueClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskGenericNotifyValueClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskGenericNotifyValueClear) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetNumberOfTasks) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.uxTaskResetEventItemValue) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelay) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelay) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelay) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelay) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskDelete) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskDelete) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskEndScheduler) refers to port.o(i.vPortEndScheduler) for vPortEndScheduler
    tasks.o(i.vTaskEndScheduler) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.vTaskGenericNotifyGiveFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.vTaskGenericNotifyGiveFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskGenericNotifyGiveFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskInternalSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskMissedYield) refers to tasks.o(.data) for xYieldPending
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnEventListRestricted) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPlaceOnEventListRestricted) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventListRestricted) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskResume) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskResume) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.vTaskResume) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskResume) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskResume) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskResume) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskResume) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSetThreadLocalStoragePointer) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    tasks.o(i.vTaskStartScheduler) refers to timers.o(i.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(i.vTaskStartScheduler) refers to port.o(i.xPortStartScheduler) for xPortStartScheduler
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(.data) for xIdleTaskHandle
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.prvIdleTask) for prvIdleTask
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSuspend) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskSuspend) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(i.vTaskSuspend) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskSuspend) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSuspendAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskCatchUpTicks) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.xTaskCatchUpTicks) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.xTaskCatchUpTicks) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    tasks.o(i.xTaskCreate) refers to heap_4.o(i.vPortFree) for vPortFree
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGenericNotifyFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGenericNotifyStateClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotifyStateClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotifyStateClear) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGenericNotifyWait) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotifyWait) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskGenericNotifyWait) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotifyWait) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGetCurrentTaskHandle) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGetSchedulerState) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.xTaskGetTickCount) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGetTickCountFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.xTaskGetTickCountFromISR) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskPriorityInherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityInherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskResumeAll) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeAll) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.bss) for xPendingReadyList
    tasks.o(i.xTaskResumeFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    timers.o(i.prvCheckForValidListAndQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.prvCheckForValidListAndQueue) refers to list.o(i.vListInitialise) for vListInitialise
    timers.o(i.prvCheckForValidListAndQueue) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(i.prvCheckForValidListAndQueue) refers to queue.o(i.vQueueAddToRegistry) for vQueueAddToRegistry
    timers.o(i.prvCheckForValidListAndQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.prvCheckForValidListAndQueue) refers to timers.o(.data) for xTimerQueue
    timers.o(i.prvCheckForValidListAndQueue) refers to timers.o(.bss) for xActiveTimerList1
    timers.o(i.prvGetNextExpireTime) refers to timers.o(.data) for pxCurrentTimerList
    timers.o(i.prvInitialiseNewTimer) refers to timers.o(i.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(i.prvInitialiseNewTimer) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    timers.o(i.prvInsertTimerInActiveList) refers to list.o(i.vListInsert) for vListInsert
    timers.o(i.prvInsertTimerInActiveList) refers to timers.o(.data) for pxOverflowTimerList
    timers.o(i.prvProcessExpiredTimer) refers to list.o(i.uxListRemove) for uxListRemove
    timers.o(i.prvProcessExpiredTimer) refers to timers.o(i.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(i.prvProcessExpiredTimer) refers to timers.o(i.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(i.prvProcessExpiredTimer) refers to timers.o(.data) for pxCurrentTimerList
    timers.o(i.prvProcessReceivedCommands) refers to list.o(i.uxListRemove) for uxListRemove
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(i.prvProcessReceivedCommands) refers to heap_4.o(i.vPortFree) for vPortFree
    timers.o(i.prvProcessReceivedCommands) refers to queue.o(i.xQueueReceive) for xQueueReceive
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(.data) for xTimerQueue
    timers.o(i.prvProcessTimerOrBlockTask) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(i.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(i.prvProcessTimerOrBlockTask) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(i.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(i.prvProcessTimerOrBlockTask) refers to queue.o(i.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(.data) for pxOverflowTimerList
    timers.o(i.prvSampleTimeNow) refers to tasks.o(i.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(i.prvSampleTimeNow) refers to timers.o(i.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(i.prvSampleTimeNow) refers to timers.o(.data) for xLastTime
    timers.o(i.prvSwitchTimerLists) refers to list.o(i.uxListRemove) for uxListRemove
    timers.o(i.prvSwitchTimerLists) refers to list.o(i.vListInsert) for vListInsert
    timers.o(i.prvSwitchTimerLists) refers to timers.o(i.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(i.prvSwitchTimerLists) refers to timers.o(.data) for pxCurrentTimerList
    timers.o(i.prvTimerTask) refers to timers.o(i.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(i.prvTimerTask) refers to timers.o(i.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(i.prvTimerTask) refers to timers.o(i.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(i.pvTimerGetTimerID) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.pvTimerGetTimerID) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.uxTimerGetReloadMode) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.uxTimerGetReloadMode) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.vTimerSetReloadMode) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.vTimerSetReloadMode) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.vTimerSetTimerID) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.vTimerSetTimerID) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.xTimerCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    timers.o(i.xTimerCreate) refers to timers.o(i.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(i.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(i.xTimerCreateTimerTask) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(.data) for xTimerQueue
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(i.prvTimerTask) for prvTimerTask
    timers.o(i.xTimerGenericCommand) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(i.xTimerGenericCommand) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    timers.o(i.xTimerGenericCommand) refers to queue.o(i.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(i.xTimerGenericCommand) refers to timers.o(.data) for xTimerQueue
    timers.o(i.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.data) for xTimerTaskHandle
    timers.o(i.xTimerIsTimerActive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.xTimerIsTimerActive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.xTimerPendFunctionCall) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    timers.o(i.xTimerPendFunctionCall) refers to timers.o(.data) for xTimerQueue
    timers.o(i.xTimerPendFunctionCallFromISR) refers to queue.o(i.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(i.xTimerPendFunctionCallFromISR) refers to timers.o(.data) for xTimerQueue
    heap_4.o(i.prvHeapInit) refers to heap_4.o(.bss) for ucHeap
    heap_4.o(i.prvHeapInit) refers to heap_4.o(.data) for xStart
    heap_4.o(i.prvInsertBlockIntoFreeList) refers to heap_4.o(.data) for xStart
    heap_4.o(i.pvPortMalloc) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(i.pvPortMalloc) refers to heap_4.o(i.prvHeapInit) for prvHeapInit
    heap_4.o(i.pvPortMalloc) refers to heap_4.o(i.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(i.pvPortMalloc) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(i.pvPortMalloc) refers to heap_4.o(.data) for pxEnd
    heap_4.o(i.vPortFree) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(i.vPortFree) refers to heap_4.o(i.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(i.vPortFree) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(i.vPortFree) refers to heap_4.o(.data) for xBlockAllocatedBit
    heap_4.o(i.vPortGetHeapStats) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(i.vPortGetHeapStats) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(i.vPortGetHeapStats) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(i.vPortGetHeapStats) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    heap_4.o(i.vPortGetHeapStats) refers to heap_4.o(.data) for xStart
    heap_4.o(i.xPortGetFreeHeapSize) refers to heap_4.o(.data) for xFreeBytesRemaining
    heap_4.o(i.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.data) for xMinimumEverFreeBytesRemaining
    port.o(.emb_text) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.emb_text) refers to tasks.o(.data) for pxCurrentTCB
    port.o(i.SysTick_Handler) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    port.o(i.prvTaskExitError) refers to port.o(.data) for uxCriticalNesting
    port.o(i.pxPortInitialiseStack) refers to port.o(i.prvTaskExitError) for prvTaskExitError
    port.o(i.vPortEndScheduler) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortEnterCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortExitCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortValidateInterruptPriority) refers to port.o(.emb_text) for vPortGetIPSR
    port.o(i.vPortValidateInterruptPriority) refers to port.o(.data) for ucMaxSysCallPriority
    port.o(i.xPortStartScheduler) refers to port.o(i.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(i.xPortStartScheduler) refers to port.o(.emb_text) for __asm___6_port_c_39a90d8d__prvStartFirstTask
    port.o(i.xPortStartScheduler) refers to port.o(.data) for ucMaxSysCallPriority
    startup_armcm3.o(i.Reset_Handler) refers to system_armcm3.o(i.SystemInit) for SystemInit
    startup_armcm3.o(i.Reset_Handler) refers to __main.o(!!!main) for __main
    startup_armcm3.o(RESET) refers to startup_armcm3.o(i.Reset_Handler) for Reset_Handler
    startup_armcm3.o(RESET) refers to startup_armcm3.o(i.Default_Handler) for NMI_Handler
    startup_armcm3.o(RESET) refers to startup_armcm3.o(i.HardFault_Handler) for HardFault_Handler
    startup_armcm3.o(RESET) refers to port.o(.emb_text) for SVC_Handler
    startup_armcm3.o(RESET) refers to port.o(i.SysTick_Handler) for SysTick_Handler
    system_armcm3.o(i.SystemCoreClockUpdate) refers to system_armcm3.o(.data) for SystemCoreClock
    system_armcm3.o(i.SystemInit) refers to startup_armcm3.o(RESET) for __Vectors
    system_armcm3.o(i.SystemInit) refers to system_armcm3.o(.data) for SystemCoreClock
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    memset.o(.text) refers to rt_memclr.o(.text) for _memset
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry7.o(.ARM.Collect$$rtentry$$00000007) for __rt_entry_sh
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    __rtentry7.o(.ARM.Collect$$rtentry$$00000007) refers to __rtentry7.o(.ARM.Collect$$rtentry$$00002718) for __lit__00000000
    __rtentry7.o(__vectab_stack_and_reset_2_area) refers to __main.o(!!!main) for __main
    __rtentry7.o(.ARM.exidx) refers to __rtentry7.o(.ARM.Collect$$rtentry$$00000007) for .ARM.Collect$$rtentry$$00000007
    __rtentry7.o(.ARM.exidx) refers to __rtentry7.o(.ARM.Collect$$rtentry$$00002718) for .ARM.Collect$$rtentry$$00002718
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to sys_stackheap.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    sys_stackheap.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_stackheap.o(.text) refers to use_no_semi.o(.text) for __I$use$semihosting
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit5.o(.ARM.Collect$$libinit$$00000008) refers to libinit5.o(.ARM.Collect$$libinit$$00002719) for __lit__00000000
    libinit5.o(.ARM.Collect$$libinit$$0000002A) refers to libinit5.o(.ARM.Collect$$libinit$$0000273B) for __lit__00000002
    libinit5.o(.ARM.Collect$$libinit$$0000002A) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_fini_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000009) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000011) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000012) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000006) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing croutine.o(i.prvCheckDelayedList), (228 bytes).
    Removing croutine.o(i.prvCheckPendingReadyList), (116 bytes).
    Removing croutine.o(i.prvInitialiseCoRoutineLists), (84 bytes).
    Removing croutine.o(i.vCoRoutineAddToDelayedList), (100 bytes).
    Removing croutine.o(i.vCoRoutineSchedule), (148 bytes).
    Removing croutine.o(i.xCoRoutineCreate), (140 bytes).
    Removing croutine.o(i.xCoRoutineRemoveFromEventList), (56 bytes).
    Removing croutine.o(.bss), (100 bytes).
    Removing croutine.o(.data), (28 bytes).
    Removing event_groups.o(i.prvTestWaitCondition), (30 bytes).
    Removing event_groups.o(i.vEventGroupClearBitsCallback), (16 bytes).
    Removing event_groups.o(i.vEventGroupDelete), (64 bytes).
    Removing event_groups.o(i.vEventGroupSetBitsCallback), (16 bytes).
    Removing event_groups.o(i.xEventGroupClearBits), (56 bytes).
    Removing event_groups.o(i.xEventGroupCreate), (26 bytes).
    Removing event_groups.o(i.xEventGroupGetBitsFromISR), (44 bytes).
    Removing event_groups.o(i.xEventGroupSetBits), (170 bytes).
    Removing event_groups.o(i.xEventGroupSync), (220 bytes).
    Removing event_groups.o(i.xEventGroupWaitBits), (272 bytes).
    Removing queue.o(i.pcQueueGetName), (44 bytes).
    Removing queue.o(i.prvGetDisinheritPriorityAfterTimeout), (20 bytes).
    Removing queue.o(i.prvInitialiseMutex), (30 bytes).
    Removing queue.o(i.uxQueueMessagesWaiting), (24 bytes).
    Removing queue.o(i.uxQueueMessagesWaitingFromISR), (14 bytes).
    Removing queue.o(i.uxQueueSpacesAvailable), (30 bytes).
    Removing queue.o(i.vQueueDelete), (26 bytes).
    Removing queue.o(i.vQueueUnregisterQueue), (48 bytes).
    Removing queue.o(i.xQueueAddToSet), (38 bytes).
    Removing queue.o(i.xQueueCRReceive), (184 bytes).
    Removing queue.o(i.xQueueCRReceiveFromISR), (94 bytes).
    Removing queue.o(i.xQueueCRSend), (166 bytes).
    Removing queue.o(i.xQueueCRSendFromISR), (64 bytes).
    Removing queue.o(i.xQueueCreateCountingSemaphore), (56 bytes).
    Removing queue.o(i.xQueueCreateMutex), (34 bytes).
    Removing queue.o(i.xQueueCreateSet), (20 bytes).
    Removing queue.o(i.xQueueGiveFromISR), (208 bytes).
    Removing queue.o(i.xQueueGiveMutexRecursive), (54 bytes).
    Removing queue.o(i.xQueueIsQueueEmptyFromISR), (22 bytes).
    Removing queue.o(i.xQueueIsQueueFullFromISR), (28 bytes).
    Removing queue.o(i.xQueuePeek), (312 bytes).
    Removing queue.o(i.xQueuePeekFromISR), (122 bytes).
    Removing queue.o(i.xQueueReceiveFromISR), (184 bytes).
    Removing queue.o(i.xQueueRemoveFromSet), (48 bytes).
    Removing queue.o(i.xQueueSelectFromSet), (24 bytes).
    Removing queue.o(i.xQueueSelectFromSetFromISR), (22 bytes).
    Removing queue.o(i.xQueueSemaphoreTake), (368 bytes).
    Removing queue.o(i.xQueueTakeMutexRecursive), (60 bytes).
    Removing stream_buffer.o(i.vStreamBufferDelete), (38 bytes).
    Removing stream_buffer.o(i.xStreamBufferBytesAvailable), (24 bytes).
    Removing stream_buffer.o(i.xStreamBufferIsEmpty), (28 bytes).
    Removing stream_buffer.o(i.xStreamBufferIsFull), (46 bytes).
    Removing stream_buffer.o(i.xStreamBufferNextMessageLengthBytes), (84 bytes).
    Removing stream_buffer.o(i.xStreamBufferReceiveCompletedFromISR), (86 bytes).
    Removing stream_buffer.o(i.xStreamBufferReceiveFromISR), (150 bytes).
    Removing stream_buffer.o(i.xStreamBufferReset), (52 bytes).
    Removing stream_buffer.o(i.xStreamBufferSendCompletedFromISR), (86 bytes).
    Removing stream_buffer.o(i.xStreamBufferSendFromISR), (150 bytes).
    Removing stream_buffer.o(i.xStreamBufferSetTriggerLevel), (32 bytes).
    Removing tasks.o(i.eTaskGetState), (144 bytes).
    Removing tasks.o(i.pcTaskGetName), (32 bytes).
    Removing tasks.o(i.prvTaskIsTaskSuspended), (72 bytes).
    Removing tasks.o(i.pvTaskGetThreadLocalStoragePointer), (44 bytes).
    Removing tasks.o(i.pvTaskIncrementMutexHeldCount), (32 bytes).
    Removing tasks.o(i.ulTaskGenericNotifyTake), (152 bytes).
    Removing tasks.o(i.ulTaskGenericNotifyValueClear), (64 bytes).
    Removing tasks.o(i.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(i.uxTaskResetEventItemValue), (28 bytes).
    Removing tasks.o(i.vTaskDelete), (232 bytes).
    Removing tasks.o(i.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(i.vTaskGenericNotifyGiveFromISR), (236 bytes).
    Removing tasks.o(i.vTaskPlaceOnUnorderedEventList), (72 bytes).
    Removing tasks.o(i.vTaskPriorityDisinheritAfterTimeout), (192 bytes).
    Removing tasks.o(i.vTaskPrioritySet), (260 bytes).
    Removing tasks.o(i.vTaskRemoveFromUnorderedEventList), (128 bytes).
    Removing tasks.o(i.vTaskResume), (128 bytes).
    Removing tasks.o(i.vTaskSetThreadLocalStoragePointer), (52 bytes).
    Removing tasks.o(i.vTaskSuspend), (240 bytes).
    Removing tasks.o(i.xTaskCatchUpTicks), (56 bytes).
    Removing tasks.o(i.xTaskDelayUntil), (160 bytes).
    Removing tasks.o(i.xTaskGenericNotifyFromISR), (368 bytes).
    Removing tasks.o(i.xTaskGetTickCountFromISR), (20 bytes).
    Removing tasks.o(i.xTaskPriorityInherit), (184 bytes).
    Removing tasks.o(i.xTaskResumeFromISR), (172 bytes).
    Removing timers.o(i.pcTimerGetName), (14 bytes).
    Removing timers.o(i.prvInitialiseNewTimer), (72 bytes).
    Removing timers.o(i.pvTimerGetTimerID), (26 bytes).
    Removing timers.o(i.uxTimerGetReloadMode), (40 bytes).
    Removing timers.o(i.vTimerSetReloadMode), (52 bytes).
    Removing timers.o(i.vTimerSetTimerID), (26 bytes).
    Removing timers.o(i.xTimerCreate), (54 bytes).
    Removing timers.o(i.xTimerGetExpiryTime), (14 bytes).
    Removing timers.o(i.xTimerGetPeriod), (14 bytes).
    Removing timers.o(i.xTimerGetTimerDaemonTaskHandle), (28 bytes).
    Removing timers.o(i.xTimerIsTimerActive), (40 bytes).
    Removing timers.o(i.xTimerPendFunctionCall), (64 bytes).
    Removing timers.o(i.xTimerPendFunctionCallFromISR), (52 bytes).
    Removing heap_4.o(i.vPortGetHeapStats), (128 bytes).
    Removing heap_4.o(i.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(i.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(i.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing port.o(i.vPortEndScheduler), (28 bytes).
    Removing startup_armcm3.o(.rev16_text), (4 bytes).
    Removing startup_armcm3.o(.revsh_text), (4 bytes).
    Removing startup_armcm3.o(.rrx_text), (6 bytes).
    Removing system_armcm3.o(.rev16_text), (4 bytes).
    Removing system_armcm3.o(.revsh_text), (4 bytes).
    Removing system_armcm3.o(.rrx_text), (6 bytes).
    Removing system_armcm3.o(i.SystemCoreClockUpdate), (16 bytes).

108 unused section(s) (total 8872 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      960  startup_armcm3.o(RESET)
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry7.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit5.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  memset.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ..\FreeRTOS\port\heap_4.c                0x00000000   Number         0  heap_4.o ABSOLUTE
    ..\FreeRTOS\port\port.c                  0x00000000   Number         0  port.o ABSOLUTE
    ..\FreeRTOS\src\croutine.c               0x00000000   Number         0  croutine.o ABSOLUTE
    ..\FreeRTOS\src\event_groups.c           0x00000000   Number         0  event_groups.o ABSOLUTE
    ..\FreeRTOS\src\list.c                   0x00000000   Number         0  list.o ABSOLUTE
    ..\FreeRTOS\src\queue.c                  0x00000000   Number         0  queue.o ABSOLUTE
    ..\FreeRTOS\src\stream_buffer.c          0x00000000   Number         0  stream_buffer.o ABSOLUTE
    ..\FreeRTOS\src\tasks.c                  0x00000000   Number         0  tasks.o ABSOLUTE
    ..\FreeRTOS\src\timers.c                 0x00000000   Number         0  timers.o ABSOLUTE
    ..\User\main.c                           0x00000000   Number         0  main.o ABSOLUTE
    ..\\FreeRTOS\\port\\port.c               0x00000000   Number         0  port.o ABSOLUTE
    RTE/Device/ARMCM3/startup_ARMCM3.c       0x00000000   Number         0  startup_armcm3.o ABSOLUTE
    RTE/Device/ARMCM3/system_ARMCM3.c        0x00000000   Number         0  system_armcm3.o ABSOLUTE
    RTE\Device\ARMCM3\startup_ARMCM3.c       0x00000000   Number         0  startup_armcm3.o ABSOLUTE
    RTE\Device\ARMCM3\system_ARMCM3.c        0x00000000   Number         0  system_armcm3.o ABSOLUTE
    __tagsym$$used                           0x00000000   Number         0  startup_armcm3.o(RESET)
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    !!!main                                  0x000003c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x000003c8   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x000003fc   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x00000418   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x00000434   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x00000436   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x00000438   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0000043a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0000043a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000006      0x0000043a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    .ARM.Collect$$libshutdown$$00000009      0x0000043a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    .ARM.Collect$$libshutdown$$0000000C      0x0000043a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000E      0x0000043a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    .ARM.Collect$$libshutdown$$00000011      0x0000043a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000011)
    .ARM.Collect$$libshutdown$$00000012      0x0000043a   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000012)
    .ARM.Collect$$rtentry$$00000000          0x0000043c   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0000043c   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000007          0x0000043c   Section        4  __rtentry7.o(.ARM.Collect$$rtentry$$00000007)
    .ARM.Collect$$rtentry$$00000009          0x00000440   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x00000440   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000444   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000444   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtentry$$00002718          0x0000044c   Section        4  __rtentry7.o(.ARM.Collect$$rtentry$$00002718)
    __lit__00000000                          0x0000044c   Data           4  __rtentry7.o(.ARM.Collect$$rtentry$$00002718)
    .ARM.Collect$$rtexit$$00000000           0x00000450   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000452   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000452   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000456   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x0000045c   Section      150  port.o(.emb_text)
    .text                                    0x000004f2   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x0000057c   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x000005e0   Section       22  memset.o(.text)
    .text                                    0x000005f6   Section       78  rt_memclr_w.o(.text)
    .text                                    0x00000644   Section       68  rt_memclr.o(.text)
    .text                                    0x00000688   Section        0  exit.o(.text)
    .text                                    0x0000069a   Section        2  use_no_semi.o(.text)
    .text                                    0x0000069c   Section        0  indicate_semi.o(.text)
    .text                                    0x0000069c   Section        0  sys_exit.o(.text)
    i.Default_Handler                        0x000006a8   Section        0  startup_armcm3.o(i.Default_Handler)
    i.HardFault_Handler                      0x000006ac   Section        0  startup_armcm3.o(i.HardFault_Handler)
    i.Reset_Handler                          0x000006b0   Section        0  startup_armcm3.o(i.Reset_Handler)
    i.SysTick_Handler                        0x000006b8   Section        0  port.o(i.SysTick_Handler)
    i.SystemInit                             0x000006ec   Section        0  system_armcm3.o(i.SystemInit)
    i.main                                   0x0000070c   Section        0  main.o(i.main)
    i.prvAddCurrentTaskToDelayedList         0x0000078c   Section        0  tasks.o(i.prvAddCurrentTaskToDelayedList)
    prvAddCurrentTaskToDelayedList           0x0000078d   Thumb Code   124  tasks.o(i.prvAddCurrentTaskToDelayedList)
    i.prvAddNewTaskToReadyList               0x00000824   Section        0  tasks.o(i.prvAddNewTaskToReadyList)
    prvAddNewTaskToReadyList                 0x00000825   Thumb Code   150  tasks.o(i.prvAddNewTaskToReadyList)
    i.prvBytesInBuffer                       0x000008d8   Section        0  stream_buffer.o(i.prvBytesInBuffer)
    prvBytesInBuffer                         0x000008d9   Thumb Code    24  stream_buffer.o(i.prvBytesInBuffer)
    i.prvCheckForValidListAndQueue           0x000008f0   Section        0  timers.o(i.prvCheckForValidListAndQueue)
    prvCheckForValidListAndQueue             0x000008f1   Thumb Code    72  timers.o(i.prvCheckForValidListAndQueue)
    i.prvCheckTasksWaitingTermination        0x00000954   Section        0  tasks.o(i.prvCheckTasksWaitingTermination)
    prvCheckTasksWaitingTermination          0x00000955   Thumb Code    60  tasks.o(i.prvCheckTasksWaitingTermination)
    i.prvCopyDataFromQueue                   0x0000099c   Section        0  queue.o(i.prvCopyDataFromQueue)
    prvCopyDataFromQueue                     0x0000099d   Thumb Code    42  queue.o(i.prvCopyDataFromQueue)
    i.prvCopyDataToQueue                     0x000009c6   Section        0  queue.o(i.prvCopyDataToQueue)
    prvCopyDataToQueue                       0x000009c7   Thumb Code   126  queue.o(i.prvCopyDataToQueue)
    i.prvDeleteTCB                           0x00000a44   Section        0  tasks.o(i.prvDeleteTCB)
    prvDeleteTCB                             0x00000a45   Thumb Code    18  tasks.o(i.prvDeleteTCB)
    i.prvGetNextExpireTime                   0x00000a58   Section        0  timers.o(i.prvGetNextExpireTime)
    prvGetNextExpireTime                     0x00000a59   Thumb Code    36  timers.o(i.prvGetNextExpireTime)
    i.prvHeapInit                            0x00000a80   Section        0  heap_4.o(i.prvHeapInit)
    prvHeapInit                              0x00000a81   Thumb Code    98  heap_4.o(i.prvHeapInit)
    i.prvIdleTask                            0x00000afc   Section        0  tasks.o(i.prvIdleTask)
    prvIdleTask                              0x00000afd   Thumb Code    32  tasks.o(i.prvIdleTask)
    i.prvInitialiseNewQueue                  0x00000b24   Section        0  queue.o(i.prvInitialiseNewQueue)
    prvInitialiseNewQueue                    0x00000b25   Thumb Code    42  queue.o(i.prvInitialiseNewQueue)
    i.prvInitialiseNewStreamBuffer           0x00000b4e   Section        0  stream_buffer.o(i.prvInitialiseNewStreamBuffer)
    prvInitialiseNewStreamBuffer             0x00000b4f   Thumb Code    68  stream_buffer.o(i.prvInitialiseNewStreamBuffer)
    i.prvInitialiseNewTask                   0x00000b92   Section        0  tasks.o(i.prvInitialiseNewTask)
    prvInitialiseNewTask                     0x00000b93   Thumb Code   172  tasks.o(i.prvInitialiseNewTask)
    i.prvInitialiseTaskLists                 0x00000c40   Section        0  tasks.o(i.prvInitialiseTaskLists)
    prvInitialiseTaskLists                   0x00000c41   Thumb Code    70  tasks.o(i.prvInitialiseTaskLists)
    i.prvInsertBlockIntoFreeList             0x00000ca8   Section        0  heap_4.o(i.prvInsertBlockIntoFreeList)
    prvInsertBlockIntoFreeList               0x00000ca9   Thumb Code    96  heap_4.o(i.prvInsertBlockIntoFreeList)
    i.prvInsertTimerInActiveList             0x00000d10   Section        0  timers.o(i.prvInsertTimerInActiveList)
    prvInsertTimerInActiveList               0x00000d11   Thumb Code    80  timers.o(i.prvInsertTimerInActiveList)
    i.prvIsQueueEmpty                        0x00000d68   Section        0  queue.o(i.prvIsQueueEmpty)
    prvIsQueueEmpty                          0x00000d69   Thumb Code    26  queue.o(i.prvIsQueueEmpty)
    i.prvIsQueueFull                         0x00000d82   Section        0  queue.o(i.prvIsQueueFull)
    prvIsQueueFull                           0x00000d83   Thumb Code    30  queue.o(i.prvIsQueueFull)
    i.prvNotifyQueueSetContainer             0x00000da0   Section        0  queue.o(i.prvNotifyQueueSetContainer)
    prvNotifyQueueSetContainer               0x00000da1   Thumb Code   118  queue.o(i.prvNotifyQueueSetContainer)
    i.prvProcessExpiredTimer                 0x00000e18   Section        0  timers.o(i.prvProcessExpiredTimer)
    prvProcessExpiredTimer                   0x00000e19   Thumb Code    92  timers.o(i.prvProcessExpiredTimer)
    i.prvProcessReceivedCommands             0x00000e78   Section        0  timers.o(i.prvProcessReceivedCommands)
    prvProcessReceivedCommands               0x00000e79   Thumb Code   294  timers.o(i.prvProcessReceivedCommands)
    i.prvProcessTimerOrBlockTask             0x00000fa4   Section        0  timers.o(i.prvProcessTimerOrBlockTask)
    prvProcessTimerOrBlockTask               0x00000fa5   Thumb Code   102  timers.o(i.prvProcessTimerOrBlockTask)
    i.prvReadBytesFromBuffer                 0x00001018   Section        0  stream_buffer.o(i.prvReadBytesFromBuffer)
    prvReadBytesFromBuffer                   0x00001019   Thumb Code   148  stream_buffer.o(i.prvReadBytesFromBuffer)
    i.prvReadMessageFromBuffer               0x000010ac   Section        0  stream_buffer.o(i.prvReadMessageFromBuffer)
    prvReadMessageFromBuffer                 0x000010ad   Thumb Code    72  stream_buffer.o(i.prvReadMessageFromBuffer)
    i.prvResetNextTaskUnblockTime            0x000010f4   Section        0  tasks.o(i.prvResetNextTaskUnblockTime)
    prvResetNextTaskUnblockTime              0x000010f5   Thumb Code    40  tasks.o(i.prvResetNextTaskUnblockTime)
    i.prvSampleTimeNow                       0x00001124   Section        0  timers.o(i.prvSampleTimeNow)
    prvSampleTimeNow                         0x00001125   Thumb Code    40  timers.o(i.prvSampleTimeNow)
    i.prvSwitchTimerLists                    0x00001150   Section        0  timers.o(i.prvSwitchTimerLists)
    prvSwitchTimerLists                      0x00001151   Thumb Code   136  timers.o(i.prvSwitchTimerLists)
    i.prvTaskExitError                       0x000011e0   Section        0  port.o(i.prvTaskExitError)
    prvTaskExitError                         0x000011e1   Thumb Code    42  port.o(i.prvTaskExitError)
    i.prvTimerTask                           0x00001210   Section        0  timers.o(i.prvTimerTask)
    prvTimerTask                             0x00001211   Thumb Code    26  timers.o(i.prvTimerTask)
    i.prvUnlockQueue                         0x0000122a   Section        0  queue.o(i.prvUnlockQueue)
    prvUnlockQueue                           0x0000122b   Thumb Code   144  queue.o(i.prvUnlockQueue)
    i.prvWriteBytesToBuffer                  0x000012ba   Section        0  stream_buffer.o(i.prvWriteBytesToBuffer)
    prvWriteBytesToBuffer                    0x000012bb   Thumb Code   132  stream_buffer.o(i.prvWriteBytesToBuffer)
    i.prvWriteMessageToBuffer                0x0000133e   Section        0  stream_buffer.o(i.prvWriteMessageToBuffer)
    prvWriteMessageToBuffer                  0x0000133f   Thumb Code    92  stream_buffer.o(i.prvWriteMessageToBuffer)
    i.pvPortMalloc                           0x0000139c   Section        0  heap_4.o(i.pvPortMalloc)
    i.pxPortInitialiseStack                  0x000014cc   Section        0  port.o(i.pxPortInitialiseStack)
    i.task1                                  0x000014f0   Section        0  main.o(i.task1)
    i.task2                                  0x0000152c   Section        0  main.o(i.task2)
    i.uxListRemove                           0x00001570   Section        0  list.o(i.uxListRemove)
    i.vListInitialise                        0x00001598   Section        0  list.o(i.vListInitialise)
    i.vListInitialiseItem                    0x000015b2   Section        0  list.o(i.vListInitialiseItem)
    i.vListInsert                            0x000015b8   Section        0  list.o(i.vListInsert)
    i.vListInsertEnd                         0x000015ec   Section        0  list.o(i.vListInsertEnd)
    i.vPortEnterCritical                     0x00001604   Section        0  port.o(i.vPortEnterCritical)
    i.vPortExitCritical                      0x00001648   Section        0  port.o(i.vPortExitCritical)
    i.vPortFree                              0x00001674   Section        0  heap_4.o(i.vPortFree)
    i.vPortSetupTimerInterrupt               0x000016f4   Section        0  port.o(i.vPortSetupTimerInterrupt)
    i.vPortValidateInterruptPriority         0x0000170c   Section        0  port.o(i.vPortValidateInterruptPriority)
    i.vQueueAddToRegistry                    0x00001760   Section        0  queue.o(i.vQueueAddToRegistry)
    i.vQueueWaitForMessageRestricted         0x0000178c   Section        0  queue.o(i.vQueueWaitForMessageRestricted)
    i.vTaskDelay                             0x000017d8   Section        0  tasks.o(i.vTaskDelay)
    i.vTaskInternalSetTimeOutState           0x00001820   Section        0  tasks.o(i.vTaskInternalSetTimeOutState)
    i.vTaskMissedYield                       0x00001838   Section        0  tasks.o(i.vTaskMissedYield)
    i.vTaskPlaceOnEventList                  0x00001844   Section        0  tasks.o(i.vTaskPlaceOnEventList)
    i.vTaskPlaceOnEventListRestricted        0x0000186c   Section        0  tasks.o(i.vTaskPlaceOnEventListRestricted)
    i.vTaskSetTimeOutState                   0x0000189c   Section        0  tasks.o(i.vTaskSetTimeOutState)
    i.vTaskStartScheduler                    0x000018c4   Section        0  tasks.o(i.vTaskStartScheduler)
    i.vTaskSuspendAll                        0x0000194c   Section        0  tasks.o(i.vTaskSuspendAll)
    i.vTaskSwitchContext                     0x0000195c   Section        0  tasks.o(i.vTaskSwitchContext)
    i.xPortStartScheduler                    0x000019d4   Section        0  port.o(i.xPortStartScheduler)
    i.xQueueGenericCreate                    0x00001aa8   Section        0  queue.o(i.xQueueGenericCreate)
    i.xQueueGenericReset                     0x00001b14   Section        0  queue.o(i.xQueueGenericReset)
    i.xQueueGenericSend                      0x00001b98   Section        0  queue.o(i.xQueueGenericSend)
    i.xQueueGenericSendFromISR               0x00001d28   Section        0  queue.o(i.xQueueGenericSendFromISR)
    i.xQueueReceive                          0x00001e18   Section        0  queue.o(i.xQueueReceive)
    i.xStreamBufferGenericCreate             0x00001f4c   Section        0  stream_buffer.o(i.xStreamBufferGenericCreate)
    i.xStreamBufferReceive                   0x00001fc2   Section        0  stream_buffer.o(i.xStreamBufferReceive)
    i.xStreamBufferSend                      0x0000208e   Section        0  stream_buffer.o(i.xStreamBufferSend)
    i.xStreamBufferSpacesAvailable           0x000021a2   Section        0  stream_buffer.o(i.xStreamBufferSpacesAvailable)
    i.xTaskCheckForTimeOut                   0x000021c8   Section        0  tasks.o(i.xTaskCheckForTimeOut)
    i.xTaskCreate                            0x00002234   Section        0  tasks.o(i.xTaskCreate)
    i.xTaskGenericNotify                     0x00002294   Section        0  tasks.o(i.xTaskGenericNotify)
    i.xTaskGenericNotifyStateClear           0x000023cc   Section        0  tasks.o(i.xTaskGenericNotifyStateClear)
    i.xTaskGenericNotifyWait                 0x00002418   Section        0  tasks.o(i.xTaskGenericNotifyWait)
    i.xTaskGetCurrentTaskHandle              0x000024d4   Section        0  tasks.o(i.xTaskGetCurrentTaskHandle)
    i.xTaskGetSchedulerState                 0x000024e0   Section        0  tasks.o(i.xTaskGetSchedulerState)
    i.xTaskGetTickCount                      0x00002500   Section        0  tasks.o(i.xTaskGetTickCount)
    i.xTaskIncrementTick                     0x0000250c   Section        0  tasks.o(i.xTaskIncrementTick)
    i.xTaskPriorityDisinherit                0x00002640   Section        0  tasks.o(i.xTaskPriorityDisinherit)
    i.xTaskRemoveFromEventList               0x000026d8   Section        0  tasks.o(i.xTaskRemoveFromEventList)
    i.xTaskResumeAll                         0x00002760   Section        0  tasks.o(i.xTaskResumeAll)
    i.xTimerCreateTimerTask                  0x00002854   Section        0  timers.o(i.xTimerCreateTimerTask)
    i.xTimerGenericCommand                   0x00002898   Section        0  timers.o(i.xTimerGenericCommand)
    .constdata                               0x0000290c   Section       40  main.o(.constdata)
    .data                                    0x20000000   Section       20  main.o(.data)
    .data                                    0x20000014   Section       64  tasks.o(.data)
    pxDelayedTaskList                        0x20000018   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x2000001c   Data           4  tasks.o(.data)
    uxDeletedTasksWaitingCleanUp             0x20000020   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x20000024   Data           4  tasks.o(.data)
    xTickCount                               0x20000028   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x2000002c   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x20000030   Data           4  tasks.o(.data)
    xPendedTicks                             0x20000034   Data           4  tasks.o(.data)
    xYieldPending                            0x20000038   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x2000003c   Data           4  tasks.o(.data)
    uxTaskNumber                             0x20000040   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x20000044   Data           4  tasks.o(.data)
    xIdleTaskHandle                          0x20000048   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x20000050   Data           4  tasks.o(.data)
    .data                                    0x20000054   Section       20  timers.o(.data)
    pxCurrentTimerList                       0x20000054   Data           4  timers.o(.data)
    pxOverflowTimerList                      0x20000058   Data           4  timers.o(.data)
    xTimerQueue                              0x2000005c   Data           4  timers.o(.data)
    xTimerTaskHandle                         0x20000060   Data           4  timers.o(.data)
    xLastTime                                0x20000064   Data           4  timers.o(.data)
    .data                                    0x20000068   Section       32  heap_4.o(.data)
    xStart                                   0x20000068   Data           8  heap_4.o(.data)
    pxEnd                                    0x20000070   Data           4  heap_4.o(.data)
    xFreeBytesRemaining                      0x20000074   Data           4  heap_4.o(.data)
    xMinimumEverFreeBytesRemaining           0x20000078   Data           4  heap_4.o(.data)
    xNumberOfSuccessfulAllocations           0x2000007c   Data           4  heap_4.o(.data)
    xNumberOfSuccessfulFrees                 0x20000080   Data           4  heap_4.o(.data)
    xBlockAllocatedBit                       0x20000084   Data           4  heap_4.o(.data)
    .data                                    0x20000088   Section       12  port.o(.data)
    uxCriticalNesting                        0x20000088   Data           4  port.o(.data)
    ucMaxSysCallPriority                     0x2000008c   Data           1  port.o(.data)
    ulMaxPRIGROUPValue                       0x20000090   Data           4  port.o(.data)
    .data                                    0x20000094   Section        4  system_armcm3.o(.data)
    .bss                                     0x20000098   Section      160  queue.o(.bss)
    .bss                                     0x20000138   Section      240  tasks.o(.bss)
    pxReadyTasksLists                        0x20000138   Data         140  tasks.o(.bss)
    xDelayedTaskList1                        0x200001c4   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x200001d8   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x200001ec   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x20000200   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x20000214   Data          20  tasks.o(.bss)
    .bss                                     0x20000228   Section       40  timers.o(.bss)
    xActiveTimerList1                        0x20000228   Data          20  timers.o(.bss)
    xActiveTimerList2                        0x2000023c   Data          20  timers.o(.bss)
    .bss                                     0x20000250   Section    53248  heap_4.o(.bss)
    ucHeap                                   0x20000250   Data       53248  heap_4.o(.bss)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data         960  startup_armcm3.o(RESET)
    Image$$ZI$$Limit                          - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_fini_                               - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __main                                   0x000003c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x000003c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x000003c9   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x000003c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x000003d7   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x000003fd   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x00000419   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x00000435   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x00000439   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0000043b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_fini_1                 0x0000043b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0000043b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    __rt_lib_shutdown_heap_1                 0x0000043b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000011)
    __rt_lib_shutdown_return                 0x0000043b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000012)
    __rt_lib_shutdown_signal_1               0x0000043b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_lib_shutdown_stdio_1                0x0000043b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    __rt_lib_shutdown_user_alloc_1           0x0000043b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    __rt_entry                               0x0000043d   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0000043d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0000043d   Thumb Code     0  __rtentry7.o(.ARM.Collect$$rtentry$$00000007)
    __rt_entry_li                            0x00000441   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x00000441   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x00000445   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000445   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x00000451   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000453   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000453   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000457   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    SVC_Handler                              0x0000045d   Thumb Code    32  port.o(.emb_text)
    __asm___6_port_c_39a90d8d__prvStartFirstTask 0x00000481   Thumb Code    28  port.o(.emb_text)
    PendSV_Handler                           0x000004a1   Thumb Code    72  port.o(.emb_text)
    vPortGetIPSR                             0x000004ed   Thumb Code     6  port.o(.emb_text)
    __aeabi_memcpy                           0x000004f3   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x000004f3   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x00000559   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memcpy4                          0x0000057d   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x0000057d   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x0000057d   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x000005c5   Thumb Code     0  rt_memcpy_w.o(.text)
    memset                                   0x000005e1   Thumb Code    22  memset.o(.text)
    __aeabi_memclr4                          0x000005f7   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x000005f7   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x000005f7   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x000005fb   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr                           0x00000645   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x00000645   Thumb Code    68  rt_memclr.o(.text)
    _memset                                  0x00000649   Thumb Code     0  rt_memclr.o(.text)
    exit                                     0x00000689   Thumb Code    18  exit.o(.text)
    __I$use$semihosting                      0x0000069b   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x0000069b   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0000069d   Thumb Code     0  indicate_semi.o(.text)
    _sys_exit                                0x0000069d   Thumb Code     8  sys_exit.o(.text)
    BusFault_Handler                         0x000006a9   Thumb Code     0  startup_armcm3.o(i.Default_Handler)
    DebugMon_Handler                         0x000006a9   Thumb Code     0  startup_armcm3.o(i.Default_Handler)
    Default_Handler                          0x000006a9   Thumb Code     4  startup_armcm3.o(i.Default_Handler)
    Interrupt0_Handler                       0x000006a9   Thumb Code     0  startup_armcm3.o(i.Default_Handler)
    Interrupt1_Handler                       0x000006a9   Thumb Code     0  startup_armcm3.o(i.Default_Handler)
    Interrupt2_Handler                       0x000006a9   Thumb Code     0  startup_armcm3.o(i.Default_Handler)
    Interrupt3_Handler                       0x000006a9   Thumb Code     0  startup_armcm3.o(i.Default_Handler)
    Interrupt4_Handler                       0x000006a9   Thumb Code     0  startup_armcm3.o(i.Default_Handler)
    Interrupt5_Handler                       0x000006a9   Thumb Code     0  startup_armcm3.o(i.Default_Handler)
    Interrupt6_Handler                       0x000006a9   Thumb Code     0  startup_armcm3.o(i.Default_Handler)
    Interrupt7_Handler                       0x000006a9   Thumb Code     0  startup_armcm3.o(i.Default_Handler)
    Interrupt8_Handler                       0x000006a9   Thumb Code     0  startup_armcm3.o(i.Default_Handler)
    Interrupt9_Handler                       0x000006a9   Thumb Code     0  startup_armcm3.o(i.Default_Handler)
    MemManage_Handler                        0x000006a9   Thumb Code     0  startup_armcm3.o(i.Default_Handler)
    NMI_Handler                              0x000006a9   Thumb Code     0  startup_armcm3.o(i.Default_Handler)
    UsageFault_Handler                       0x000006a9   Thumb Code     0  startup_armcm3.o(i.Default_Handler)
    HardFault_Handler                        0x000006ad   Thumb Code     4  startup_armcm3.o(i.HardFault_Handler)
    Reset_Handler                            0x000006b1   Thumb Code     8  startup_armcm3.o(i.Reset_Handler)
    SysTick_Handler                          0x000006b9   Thumb Code    46  port.o(i.SysTick_Handler)
    SystemInit                               0x000006ed   Thumb Code    14  system_armcm3.o(i.SystemInit)
    main                                     0x0000070d   Thumb Code    92  main.o(i.main)
    pvPortMalloc                             0x0000139d   Thumb Code   280  heap_4.o(i.pvPortMalloc)
    pxPortInitialiseStack                    0x000014cd   Thumb Code    30  port.o(i.pxPortInitialiseStack)
    task1                                    0x000014f1   Thumb Code    46  main.o(i.task1)
    task2                                    0x0000152d   Thumb Code    60  main.o(i.task2)
    uxListRemove                             0x00001571   Thumb Code    40  list.o(i.uxListRemove)
    vListInitialise                          0x00001599   Thumb Code    26  list.o(i.vListInitialise)
    vListInitialiseItem                      0x000015b3   Thumb Code     6  list.o(i.vListInitialiseItem)
    vListInsert                              0x000015b9   Thumb Code    52  list.o(i.vListInsert)
    vListInsertEnd                           0x000015ed   Thumb Code    24  list.o(i.vListInsertEnd)
    vPortEnterCritical                       0x00001605   Thumb Code    58  port.o(i.vPortEnterCritical)
    vPortExitCritical                        0x00001649   Thumb Code    38  port.o(i.vPortExitCritical)
    vPortFree                                0x00001675   Thumb Code   114  heap_4.o(i.vPortFree)
    vPortSetupTimerInterrupt                 0x000016f5   Thumb Code    22  port.o(i.vPortSetupTimerInterrupt)
    vPortValidateInterruptPriority           0x0000170d   Thumb Code    70  port.o(i.vPortValidateInterruptPriority)
    vQueueAddToRegistry                      0x00001761   Thumb Code    38  queue.o(i.vQueueAddToRegistry)
    vQueueWaitForMessageRestricted           0x0000178d   Thumb Code    74  queue.o(i.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x000017d9   Thumb Code    64  tasks.o(i.vTaskDelay)
    vTaskInternalSetTimeOutState             0x00001821   Thumb Code    14  tasks.o(i.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00001839   Thumb Code     8  tasks.o(i.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00001845   Thumb Code    34  tasks.o(i.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x0000186d   Thumb Code    42  tasks.o(i.vTaskPlaceOnEventListRestricted)
    vTaskSetTimeOutState                     0x0000189d   Thumb Code    32  tasks.o(i.vTaskSetTimeOutState)
    vTaskStartScheduler                      0x000018c5   Thumb Code   104  tasks.o(i.vTaskStartScheduler)
    vTaskSuspendAll                          0x0000194d   Thumb Code    12  tasks.o(i.vTaskSuspendAll)
    vTaskSwitchContext                       0x0000195d   Thumb Code   100  tasks.o(i.vTaskSwitchContext)
    xPortStartScheduler                      0x000019d5   Thumb Code   192  port.o(i.xPortStartScheduler)
    xQueueGenericCreate                      0x00001aa9   Thumb Code   108  queue.o(i.xQueueGenericCreate)
    xQueueGenericReset                       0x00001b15   Thumb Code   128  queue.o(i.xQueueGenericReset)
    xQueueGenericSend                        0x00001b99   Thumb Code   394  queue.o(i.xQueueGenericSend)
    xQueueGenericSendFromISR                 0x00001d29   Thumb Code   238  queue.o(i.xQueueGenericSendFromISR)
    xQueueReceive                            0x00001e19   Thumb Code   302  queue.o(i.xQueueReceive)
    xStreamBufferGenericCreate               0x00001f4d   Thumb Code   118  stream_buffer.o(i.xStreamBufferGenericCreate)
    xStreamBufferReceive                     0x00001fc3   Thumb Code   204  stream_buffer.o(i.xStreamBufferReceive)
    xStreamBufferSend                        0x0000208f   Thumb Code   276  stream_buffer.o(i.xStreamBufferSend)
    xStreamBufferSpacesAvailable             0x000021a3   Thumb Code    36  stream_buffer.o(i.xStreamBufferSpacesAvailable)
    xTaskCheckForTimeOut                     0x000021c9   Thumb Code   100  tasks.o(i.xTaskCheckForTimeOut)
    xTaskCreate                              0x00002235   Thumb Code    96  tasks.o(i.xTaskCreate)
    xTaskGenericNotify                       0x00002295   Thumb Code   290  tasks.o(i.xTaskGenericNotify)
    xTaskGenericNotifyStateClear             0x000023cd   Thumb Code    72  tasks.o(i.xTaskGenericNotifyStateClear)
    xTaskGenericNotifyWait                   0x00002419   Thumb Code   178  tasks.o(i.xTaskGenericNotifyWait)
    xTaskGetCurrentTaskHandle                0x000024d5   Thumb Code     6  tasks.o(i.xTaskGetCurrentTaskHandle)
    xTaskGetSchedulerState                   0x000024e1   Thumb Code    24  tasks.o(i.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x00002501   Thumb Code     6  tasks.o(i.xTaskGetTickCount)
    xTaskIncrementTick                       0x0000250d   Thumb Code   264  tasks.o(i.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00002641   Thumb Code   138  tasks.o(i.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x000026d9   Thumb Code   110  tasks.o(i.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00002761   Thumb Code   206  tasks.o(i.xTaskResumeAll)
    xTimerCreateTimerTask                    0x00002855   Thumb Code    48  timers.o(i.xTimerCreateTimerTask)
    xTimerGenericCommand                     0x00002899   Thumb Code   110  timers.o(i.xTimerGenericCommand)
    Region$$Table$$Base                      0x00002934   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00002954   Number         0  anon$$obj.o(Region$$Table)
    flag1                                    0x20000000   Data           4  main.o(.data)
    flag2                                    0x20000004   Data           4  main.o(.data)
    task1handler                             0x20000008   Data           4  main.o(.data)
    task2handler                             0x2000000c   Data           4  main.o(.data)
    msg                                      0x20000010   Data           4  main.o(.data)
    pxCurrentTCB                             0x20000014   Data           4  tasks.o(.data)
    uxTopUsedPriority                        0x2000004c   Data           4  tasks.o(.data)
    SystemCoreClock                          0x20000094   Data           4  system_armcm3.o(.data)
    xQueueRegistry                           0x20000098   Data         160  queue.o(.bss)
    Image$$ARM_LIB_HEAP$$ZI$$Base            0x2000d250   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_HEAP$$ZI$$Limit           0x2000de50   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_STACK$$ZI$$Limit          0x20040000   Number         0  anon$$obj.o ABSOLUTE



==============================================================================

Memory Map of the image

  Image Entry point : 0x000003c1

  Load Region LR_ROM (Base: 0x00000000, Size: 0x000029ec, Max: 0x00080000, ABSOLUTE)

    Execution Region ER_ROM (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00002954, Max: 0x00080000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000003c0   Data   RO         1300    RESET               startup_armcm3.o
    0x000003c0   0x000003c0   0x00000008   Code   RO         1404  * !!!main             c_w.l(__main.o)
    0x000003c8   0x000003c8   0x00000034   Code   RO         1576    !!!scatter          c_w.l(__scatter.o)
    0x000003fc   0x000003fc   0x0000001a   Code   RO         1578    !!handler_copy      c_w.l(__scatter_copy.o)
    0x00000416   0x00000416   0x00000002   PAD
    0x00000418   0x00000418   0x0000001c   Code   RO         1580    !!handler_zi        c_w.l(__scatter_zi.o)
    0x00000434   0x00000434   0x00000002   Code   RO         1438    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1447    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1449    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1452    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1454    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1456    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1459    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1461    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1463    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1465    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1467    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1469    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1471    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1473    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1475    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1477    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1479    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1483    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1485    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1487    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO         1489    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000002   Code   RO         1490    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x00000438   0x00000438   0x00000002   Code   RO         1517    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0000043a   0x0000043a   0x00000000   Code   RO         1527    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0000043a   0x0000043a   0x00000000   Code   RO         1529    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0000043a   0x0000043a   0x00000000   Code   RO         1531    .ARM.Collect$$libshutdown$$00000006  c_w.l(libshutdown2.o)
    0x0000043a   0x0000043a   0x00000000   Code   RO         1534    .ARM.Collect$$libshutdown$$00000009  c_w.l(libshutdown2.o)
    0x0000043a   0x0000043a   0x00000000   Code   RO         1537    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0000043a   0x0000043a   0x00000000   Code   RO         1539    .ARM.Collect$$libshutdown$$0000000E  c_w.l(libshutdown2.o)
    0x0000043a   0x0000043a   0x00000000   Code   RO         1542    .ARM.Collect$$libshutdown$$00000011  c_w.l(libshutdown2.o)
    0x0000043a   0x0000043a   0x00000002   Code   RO         1543    .ARM.Collect$$libshutdown$$00000012  c_w.l(libshutdown2.o)
    0x0000043c   0x0000043c   0x00000000   Code   RO         1406    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0000043c   0x0000043c   0x00000000   Code   RO         1410    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0000043c   0x0000043c   0x00000004   Code   RO         1424    .ARM.Collect$$rtentry$$00000007  c_w.l(__rtentry7.o)
    0x00000440   0x00000440   0x00000000   Code   RO         1412    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x00000440   0x00000440   0x00000004   Code   RO         1413    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x00000444   0x00000444   0x00000000   Code   RO         1415    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x00000444   0x00000444   0x00000008   Code   RO         1416    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0000044c   0x0000044c   0x00000004   Code   RO         1425    .ARM.Collect$$rtentry$$00002718  c_w.l(__rtentry7.o)
    0x00000450   0x00000450   0x00000002   Code   RO         1444    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000452   0x00000452   0x00000000   Code   RO         1499    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000452   0x00000452   0x00000004   Code   RO         1500    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000456   0x00000456   0x00000006   Code   RO         1501    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000045c   0x0000045c   0x00000096   Code   RO         1216    .emb_text           port.o
    0x000004f2   0x000004f2   0x0000008a   Code   RO         1396    .text               c_w.l(rt_memcpy_v6.o)
    0x0000057c   0x0000057c   0x00000064   Code   RO         1398    .text               c_w.l(rt_memcpy_w.o)
    0x000005e0   0x000005e0   0x00000016   Code   RO         1400    .text               c_w.l(memset.o)
    0x000005f6   0x000005f6   0x0000004e   Code   RO         1402    .text               c_w.l(rt_memclr_w.o)
    0x00000644   0x00000644   0x00000044   Code   RO         1407    .text               c_w.l(rt_memclr.o)
    0x00000688   0x00000688   0x00000012   Code   RO         1431    .text               c_w.l(exit.o)
    0x0000069a   0x0000069a   0x00000002   Code   RO         1495    .text               c_w.l(use_no_semi.o)
    0x0000069c   0x0000069c   0x00000000   Code   RO         1497    .text               c_w.l(indicate_semi.o)
    0x0000069c   0x0000069c   0x0000000c   Code   RO         1509    .text               c_w.l(sys_exit.o)
    0x000006a8   0x000006a8   0x00000004   Code   RO         1297    i.Default_Handler   startup_armcm3.o
    0x000006ac   0x000006ac   0x00000004   Code   RO         1298    i.HardFault_Handler  startup_armcm3.o
    0x000006b0   0x000006b0   0x00000008   Code   RO         1299    i.Reset_Handler     startup_armcm3.o
    0x000006b8   0x000006b8   0x00000034   Code   RO         1217    i.SysTick_Handler   port.o
    0x000006ec   0x000006ec   0x00000020   Code   RO         1361    i.SystemInit        system_armcm3.o
    0x0000070c   0x0000070c   0x00000080   Code   RO            3    i.main              main.o
    0x0000078c   0x0000078c   0x00000098   Code   RO          683    i.prvAddCurrentTaskToDelayedList  tasks.o
    0x00000824   0x00000824   0x000000b4   Code   RO          684    i.prvAddNewTaskToReadyList  tasks.o
    0x000008d8   0x000008d8   0x00000018   Code   RO          540    i.prvBytesInBuffer  stream_buffer.o
    0x000008f0   0x000008f0   0x00000064   Code   RO         1013    i.prvCheckForValidListAndQueue  timers.o
    0x00000954   0x00000954   0x00000048   Code   RO          685    i.prvCheckTasksWaitingTermination  tasks.o
    0x0000099c   0x0000099c   0x0000002a   Code   RO          268    i.prvCopyDataFromQueue  queue.o
    0x000009c6   0x000009c6   0x0000007e   Code   RO          269    i.prvCopyDataToQueue  queue.o
    0x00000a44   0x00000a44   0x00000012   Code   RO          686    i.prvDeleteTCB      tasks.o
    0x00000a56   0x00000a56   0x00000002   PAD
    0x00000a58   0x00000a58   0x00000028   Code   RO         1014    i.prvGetNextExpireTime  timers.o
    0x00000a80   0x00000a80   0x0000007c   Code   RO         1161    i.prvHeapInit       heap_4.o
    0x00000afc   0x00000afc   0x00000028   Code   RO          687    i.prvIdleTask       tasks.o
    0x00000b24   0x00000b24   0x0000002a   Code   RO          272    i.prvInitialiseNewQueue  queue.o
    0x00000b4e   0x00000b4e   0x00000044   Code   RO          541    i.prvInitialiseNewStreamBuffer  stream_buffer.o
    0x00000b92   0x00000b92   0x000000ac   Code   RO          688    i.prvInitialiseNewTask  tasks.o
    0x00000c3e   0x00000c3e   0x00000002   PAD
    0x00000c40   0x00000c40   0x00000068   Code   RO          689    i.prvInitialiseTaskLists  tasks.o
    0x00000ca8   0x00000ca8   0x00000068   Code   RO         1162    i.prvInsertBlockIntoFreeList  heap_4.o
    0x00000d10   0x00000d10   0x00000058   Code   RO         1016    i.prvInsertTimerInActiveList  timers.o
    0x00000d68   0x00000d68   0x0000001a   Code   RO          273    i.prvIsQueueEmpty   queue.o
    0x00000d82   0x00000d82   0x0000001e   Code   RO          274    i.prvIsQueueFull    queue.o
    0x00000da0   0x00000da0   0x00000076   Code   RO          275    i.prvNotifyQueueSetContainer  queue.o
    0x00000e16   0x00000e16   0x00000002   PAD
    0x00000e18   0x00000e18   0x00000060   Code   RO         1017    i.prvProcessExpiredTimer  timers.o
    0x00000e78   0x00000e78   0x0000012c   Code   RO         1018    i.prvProcessReceivedCommands  timers.o
    0x00000fa4   0x00000fa4   0x00000074   Code   RO         1019    i.prvProcessTimerOrBlockTask  timers.o
    0x00001018   0x00001018   0x00000094   Code   RO          542    i.prvReadBytesFromBuffer  stream_buffer.o
    0x000010ac   0x000010ac   0x00000048   Code   RO          543    i.prvReadMessageFromBuffer  stream_buffer.o
    0x000010f4   0x000010f4   0x00000030   Code   RO          690    i.prvResetNextTaskUnblockTime  tasks.o
    0x00001124   0x00001124   0x0000002c   Code   RO         1020    i.prvSampleTimeNow  timers.o
    0x00001150   0x00001150   0x00000090   Code   RO         1021    i.prvSwitchTimerLists  timers.o
    0x000011e0   0x000011e0   0x00000030   Code   RO         1218    i.prvTaskExitError  port.o
    0x00001210   0x00001210   0x0000001a   Code   RO         1022    i.prvTimerTask      timers.o
    0x0000122a   0x0000122a   0x00000090   Code   RO          276    i.prvUnlockQueue    queue.o
    0x000012ba   0x000012ba   0x00000084   Code   RO          544    i.prvWriteBytesToBuffer  stream_buffer.o
    0x0000133e   0x0000133e   0x0000005c   Code   RO          545    i.prvWriteMessageToBuffer  stream_buffer.o
    0x0000139a   0x0000139a   0x00000002   PAD
    0x0000139c   0x0000139c   0x00000130   Code   RO         1163    i.pvPortMalloc      heap_4.o
    0x000014cc   0x000014cc   0x00000024   Code   RO         1219    i.pxPortInitialiseStack  port.o
    0x000014f0   0x000014f0   0x0000003c   Code   RO            4    i.task1             main.o
    0x0000152c   0x0000152c   0x00000044   Code   RO            5    i.task2             main.o
    0x00001570   0x00001570   0x00000028   Code   RO          228    i.uxListRemove      list.o
    0x00001598   0x00001598   0x0000001a   Code   RO          229    i.vListInitialise   list.o
    0x000015b2   0x000015b2   0x00000006   Code   RO          230    i.vListInitialiseItem  list.o
    0x000015b8   0x000015b8   0x00000034   Code   RO          231    i.vListInsert       list.o
    0x000015ec   0x000015ec   0x00000018   Code   RO          232    i.vListInsertEnd    list.o
    0x00001604   0x00001604   0x00000044   Code   RO         1221    i.vPortEnterCritical  port.o
    0x00001648   0x00001648   0x0000002c   Code   RO         1222    i.vPortExitCritical  port.o
    0x00001674   0x00001674   0x00000080   Code   RO         1164    i.vPortFree         heap_4.o
    0x000016f4   0x000016f4   0x00000016   Code   RO         1223    i.vPortSetupTimerInterrupt  port.o
    0x0000170a   0x0000170a   0x00000002   PAD
    0x0000170c   0x0000170c   0x00000054   Code   RO         1224    i.vPortValidateInterruptPriority  port.o
    0x00001760   0x00001760   0x0000002c   Code   RO          280    i.vQueueAddToRegistry  queue.o
    0x0000178c   0x0000178c   0x0000004a   Code   RO          283    i.vQueueWaitForMessageRestricted  queue.o
    0x000017d6   0x000017d6   0x00000002   PAD
    0x000017d8   0x000017d8   0x00000048   Code   RO          698    i.vTaskDelay        tasks.o
    0x00001820   0x00001820   0x00000018   Code   RO          702    i.vTaskInternalSetTimeOutState  tasks.o
    0x00001838   0x00001838   0x0000000c   Code   RO          703    i.vTaskMissedYield  tasks.o
    0x00001844   0x00001844   0x00000028   Code   RO          704    i.vTaskPlaceOnEventList  tasks.o
    0x0000186c   0x0000186c   0x00000030   Code   RO          705    i.vTaskPlaceOnEventListRestricted  tasks.o
    0x0000189c   0x0000189c   0x00000028   Code   RO          712    i.vTaskSetTimeOutState  tasks.o
    0x000018c4   0x000018c4   0x00000088   Code   RO          713    i.vTaskStartScheduler  tasks.o
    0x0000194c   0x0000194c   0x00000010   Code   RO          715    i.vTaskSuspendAll   tasks.o
    0x0000195c   0x0000195c   0x00000078   Code   RO          716    i.vTaskSwitchContext  tasks.o
    0x000019d4   0x000019d4   0x000000d4   Code   RO         1225    i.xPortStartScheduler  port.o
    0x00001aa8   0x00001aa8   0x0000006c   Code   RO          292    i.xQueueGenericCreate  queue.o
    0x00001b14   0x00001b14   0x00000084   Code   RO          293    i.xQueueGenericReset  queue.o
    0x00001b98   0x00001b98   0x00000190   Code   RO          294    i.xQueueGenericSend  queue.o
    0x00001d28   0x00001d28   0x000000ee   Code   RO          295    i.xQueueGenericSendFromISR  queue.o
    0x00001e16   0x00001e16   0x00000002   PAD
    0x00001e18   0x00001e18   0x00000134   Code   RO          302    i.xQueueReceive     queue.o
    0x00001f4c   0x00001f4c   0x00000076   Code   RO          548    i.xStreamBufferGenericCreate  stream_buffer.o
    0x00001fc2   0x00001fc2   0x000000cc   Code   RO          552    i.xStreamBufferReceive  stream_buffer.o
    0x0000208e   0x0000208e   0x00000114   Code   RO          556    i.xStreamBufferSend  stream_buffer.o
    0x000021a2   0x000021a2   0x00000024   Code   RO          560    i.xStreamBufferSpacesAvailable  stream_buffer.o
    0x000021c6   0x000021c6   0x00000002   PAD
    0x000021c8   0x000021c8   0x0000006c   Code   RO          718    i.xTaskCheckForTimeOut  tasks.o
    0x00002234   0x00002234   0x00000060   Code   RO          719    i.xTaskCreate       tasks.o
    0x00002294   0x00002294   0x00000138   Code   RO          721    i.xTaskGenericNotify  tasks.o
    0x000023cc   0x000023cc   0x0000004c   Code   RO          723    i.xTaskGenericNotifyStateClear  tasks.o
    0x00002418   0x00002418   0x000000bc   Code   RO          724    i.xTaskGenericNotifyWait  tasks.o
    0x000024d4   0x000024d4   0x0000000c   Code   RO          725    i.xTaskGetCurrentTaskHandle  tasks.o
    0x000024e0   0x000024e0   0x00000020   Code   RO          726    i.xTaskGetSchedulerState  tasks.o
    0x00002500   0x00002500   0x0000000c   Code   RO          727    i.xTaskGetTickCount  tasks.o
    0x0000250c   0x0000250c   0x00000134   Code   RO          729    i.xTaskIncrementTick  tasks.o
    0x00002640   0x00002640   0x00000098   Code   RO          730    i.xTaskPriorityDisinherit  tasks.o
    0x000026d8   0x000026d8   0x00000088   Code   RO          732    i.xTaskRemoveFromEventList  tasks.o
    0x00002760   0x00002760   0x000000f4   Code   RO          733    i.xTaskResumeAll    tasks.o
    0x00002854   0x00002854   0x00000044   Code   RO         1028    i.xTimerCreateTimerTask  timers.o
    0x00002898   0x00002898   0x00000074   Code   RO         1029    i.xTimerGenericCommand  timers.o
    0x0000290c   0x0000290c   0x00000028   Data   RO            6    .constdata          main.o
    0x00002934   0x00002934   0x00000020   Data   RO         1574    Region$$Table       anon$$obj.o


    Execution Region RW_RAM (Exec base: 0x20000000, Load base: 0x00002954, Size: 0x0000d250, Max: 0x0003f200, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00002954   0x00000014   Data   RW            7    .data               main.o
    0x20000014   0x00002968   0x00000040   Data   RW          736    .data               tasks.o
    0x20000054   0x000029a8   0x00000014   Data   RW         1037    .data               timers.o
    0x20000068   0x000029bc   0x00000020   Data   RW         1170    .data               heap_4.o
    0x20000088   0x000029dc   0x0000000c   Data   RW         1226    .data               port.o
    0x20000094   0x000029e8   0x00000004   Data   RW         1362    .data               system_armcm3.o
    0x20000098        -       0x000000a0   Zero   RW          309    .bss                queue.o
    0x20000138        -       0x000000f0   Zero   RW          735    .bss                tasks.o
    0x20000228        -       0x00000028   Zero   RW         1036    .bss                timers.o
    0x20000250        -       0x0000d000   Zero   RW         1169    .bss                heap_4.o


    Execution Region ARM_LIB_HEAP (Exec base: 0x2000d250, Load base: 0x000029ec, Size: 0x00000c00, Max: 0x00000c00, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2000d250        -       0x00000c00   Zero   RW            1    ARM_LIB_HEAP.bss    anon$$obj.o


    Execution Region ARM_LIB_STACK (Exec base: 0x2003fe00, Load base: 0x000029ec, Size: 0x00000200, Max: 0x00000200, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2003fe00        -       0x00000200   Zero   RW            2    ARM_LIB_STACK.bss   anon$$obj.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         0          0          0          0          0      10788   event_groups.o
       660         72          0         32      53248       3767   heap_4.o
       148          0          0          0          0       3078   list.o
       256         58         40         20          0      22743   main.o
       716         80          0         12          0       9369   port.o
      1832         22          0          0        160      25926   queue.o
        16          0        960          0          0       2506   startup_armcm3.o
      1170          0          0          0          0      11631   stream_buffer.o
        32         18          0          4          0        635   system_armcm3.o
      2970        410          0         64        240      27672   tasks.o
      1138        112          0         20         40      13015   timers.o

    ----------------------------------------------------------------------
      8954        772       1032        152      57272     131130   Object Totals
         0          0         32          0       3584          0   (incl. Generated)
        16          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         8          4          0          0          0          0   __rtentry7.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         80   exit.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
        22          0          0          0          0         76   memset.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       594         16          0          0          0        656   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       592         16          0          0          0        656   c_w.l

    ----------------------------------------------------------------------
       594         16          0          0          0        656   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      9548        788       1032        152      57272     127154   Grand Totals
      9548        788       1032        152      57272     127154   ELF Image Totals
      9548        788       1032        152          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                10580 (  10.33kB)
    Total RW  Size (RW Data + ZI Data)             57424 (  56.08kB)
    Total ROM Size (Code + RO Data + RW Data)      10732 (  10.48kB)

==============================================================================

